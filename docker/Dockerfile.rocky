ARG ROCKY_VERSION=9
FROM rockylinux:${ROCKY_VERSION}

# 安裝 EPEL repository
RUN dnf update -y && \
    dnf install -y epel-release && \
    dnf config-manager --set-enabled crb 2>/dev/null || \
    dnf config-manager --set-enabled powertools 2>/dev/null || true

# 安裝基本工具
RUN dnf groupinstall -y "Development Tools" && \
    dnf install -y \
    cmake \
    ninja-build \
    pkgconfig \
    gtk3-devel \
    gtk3 \
    glib2-devel \
    git \
    && dnf clean all

# 嘗試安裝可選套件
RUN dnf install -y \
    xorg-x11-server-Xvfb \
    ImageMagick \
    dbus-x11 \
    || echo "Some optional packages skipped"

# 設定工作目錄
WORKDIR /workspace

# 複製專案檔案
COPY . /workspace/

# 建構專案
RUN rm -rf build && \
    mkdir -p build && \
    cd build && \
    cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release && \
    ninja

# 設定執行環境
ENV DISPLAY=:99
ENV AUTO_TEST=1

# 建立簡單的測試腳本（使用 cat 而不是 echo）
RUN cat > /workspace/test.sh << 'EOL' && \
#!/bin/bash
set -e
echo "Testing GTK app in Rocky Linux container"
if [ -f /etc/rocky-release ]; then
    echo "OS: $(cat /etc/rocky-release)"
elif [ -f /etc/os-release ]; then
    echo "OS: $(grep PRETTY_NAME /etc/os-release | cut -d'"' -f2)"
fi
echo "CMake version: $(cmake --version | head -1)"
echo "GTK version: $(pkg-config --modversion gtk+-3.0)"

if [ -f /workspace/build/src/gtk-test-app ]; then
    echo "Application built successfully"
    
    if command -v Xvfb >/dev/null 2>&1; then
        echo "Starting virtual display..."
        Xvfb :99 -screen 0 1024x768x24 &
        XVFB_PID=$!
        sleep 3
        
        echo "Running GTK application..."
        cd /workspace/build
        timeout 15 ./src/gtk-test-app || echo "App test completed"
        
        kill $XVFB_PID 2>/dev/null || true
    else
        echo "Xvfb not available, skipping GUI test"
    fi
    
    echo "Rocky Linux container test successful"
else
    echo "Application not found"
    ls -la /workspace/build/src/ || echo "build/src directory not found"
    exit 1
fi
EOL
chmod +x /workspace/test.sh

CMD ["/workspace/test.sh"]
